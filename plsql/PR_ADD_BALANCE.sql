CREATE OR REPLACE PROCEDURE ISS.PR_ADD_BALANCE (
  I_SELL_INFO  IN  SELL_INFO_TYPE                 -- TYPE    : 매도정보
, I_BY_DATE    IN  CHAR
, O_BOND_TRADE OUT BOND_TRADE%ROWTYPE             -- ROWTYPE : 거래내역
) IS
  T_BOND_BALANCE BOND_BALANCE%ROWTYPE;            -- ROWTYPE : 잔고
  T_LAST_DAY CHAR(8);
  
  -- CURSOR : 잔고
  CURSOR C_BOND_BALANCE_CUR IS
    SELECT *
      FROM BOND_BALANCE
     WHERE BIZ_DATE  = I_SELL_INFO.TRD_DATE   -- 거래일자(잔고 PK)
       AND FUND_CODE = I_SELL_INFO.FUND_CODE  -- 펀드코드(잔고 PK)
       AND BOND_CODE = I_SELL_INFO.BOND_CODE  -- 종목코드(잔고 PK)
       AND BUY_DATE  = I_SELL_INFO.BUY_DATE   -- 매수일자(잔고 PK)
       AND BUY_PRICE = I_SELL_INFO.BUY_PRICE  -- 매수단가(잔고 PK)
       AND BALAN_SEQ = I_SELL_INFO.BALAN_SEQ  -- 잔고일련번호(잔고 PK)
       FOR UPDATE;
BEGIN
  -- 잔고 조회
  OPEN C_BOND_BALANCE_CUR;
    FETCH C_BOND_BALANCE_CUR INTO T_BOND_BALANCE;
    IF C_BOND_BALANCE_CUR%NOTFOUND THEN
      CLOSE C_BOND_BALANCE_CUR;
      RAISE_APPLICATION_ERROR(-20011, '잔고 오류');
    END IF;
  CLOSE C_BOND_BALANCE_CUR;
  
  
  T_LAST_DAY := TO_CHAR(LAST_DAY(TO_DATE(T_BOND_BALANCE.BIZ_DATE, 'YYYYMMDD')), 'YYYYMMDD');
  
  -- 월말까지 잔고 생성
  LOOP
    T_BOND_BALANCE.BIZ_DATE := TO_CHAR(TO_DATE(T_BOND_BALANCE.BIZ_DATE, 'YYYYMMDD') + 1, 'YYYYMMDD');
    
    IF TO_CHAR(TO_DATE(T_BOND_BALANCE.BIZ_DATE, 'YYYYMMDD'), 'D') <> '1' AND
       TO_CHAR(TO_DATE(T_BOND_BALANCE.BIZ_DATE, 'YYYYMMDD'), 'D') <> '7' THEN
      
      -- 당기채권이자 쌓기
      T_BOND_BALANCE.TTRM_BOND_INT := T_BOND_BALANCE.TOT_QTY * 1000 * T_BOND_BALANCE.BOND_IR * FN_CALC_DAYS(T_BOND_BALANCE.BUY_DATE, T_BOND_BALANCE.BIZ_DATE) / 365;
      
      INSERT INTO BOND_BALANCE VALUES T_BOND_BALANCE;
    END IF;
    
    EXIT WHEN I_BY_DATE = TO_DATE(T_BOND_BALANCE.BIZ_DATE, 'YYYYMMDD');
  END LOOP;
  
  COMMIT;
  DBMS_OUTPUT.PUT_LINE('PR_ADD_BALANCE END');
  
END;